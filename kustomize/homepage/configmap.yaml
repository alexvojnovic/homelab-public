apiVersion: v1
kind: ConfigMap
metadata:
  name: homepage
  labels:
    app.kubernetes.io/name: homepage
data:
  kubernetes.yaml: |
    mode: cluster
    ingress: true
  settings.yaml: |
    base: https://homepage.$YOUR_DOMAIN_NAME.com
    background: 
      color: slate
      blur: md
    color: slate 
  # color: grey
  #settings.yaml: |
  #  providers:
  #    longhorn:
  #      url: https://longhorn.my.network
  custom.css: ""
  custom.js: ""
  bookmarks.yaml: |
    - Developer:
        - Github Account Page:
            - abbr: GH
              href: https://github.com/$YOUR_GITHUB_USERNAME?tab=repositories
        - Homepage Widget Docs:
            - abbr: HW
              href: https://gethomepage.dev/widgets/
        - media-stack Docs:
            - abbr: GH
              href: https://github.com/navilg/media-stack
        - Cloning Linux install Docs:
            - abbr: CL
              href: https://nikvdp.com/post/cloning-a-linux-install/
        - Trilium selfhosted notetaking:
            - abbr: TR
              href: https://github.com/zadam/trilium
  services.yaml: |
    - Tools:
        - Grafana:
            href: https://grafana.$YOUR_DOMAIN_NAME.com/
            description: grafana
            widget:
              type: grafana
              icon: grafana
              url: https://grafana.$YOUR_DOMAIN_NAME.com/
              username: $YOUR_GRAFANA_USERNAME
              password: $YOUR_GRAFANA_PASSWORD
        - TailScale:
            href: https://login.tailscale.com/admin/machines
            description: Tailscale
            icon: tailscale
            widget:
              type: tailscale
              deviceid: $YOUR_TAILSCALE_DEVICE_ID
              key: $YOUR_TAILSCALE_API_KEY

    # - My Second Group:
    #     - My Second Service:
    #         href: http://localhost/
    #         description: Homepage is the best

    # - My Third Group:
    #     - My Third Service:
    #         href: http://localhost/
    #         description: Homepage is ðŸ˜Ž
  widgets.yaml: |
    - kubernetes:
        cluster:
          show: false
          cpu: true
          memory: true
          showLabel: true
          label: "cluster"
        nodes:
          show: true
          cpu: true
          memory: true
          showLabel: true
    - resources:
        backend: resources
        expanded: true
        cpu: true
        memory: true
        network: default
    - openmeteo:
        label: Atlanta # optional
        latitude: 33.753746
        longitude: -84.386330
        units: imperial
        cache: 5 # Time in minutes to cache API responses, to stay within limits
        format: # optional, Intl.NumberFormat options
          maximumFractionDigits: 1
    - search:
        provider: duckduckgo
        target: _blank
  docker.yaml: ""
